{"version":3,"file":"App.core.js","sources":["../../../src/core/App.core.js"],"sourcesContent":["import { createServer } from 'http'\r\n\r\nimport appConfig from '../configs/App.config.js'\r\nimport createAppContext from '../contexts/App.context.js'\r\nimport httpHandler from '../utils/httpHandler.js'\r\n\r\nimport createCORS from './app_methods/CORS.method.js'\r\nimport createAddController from './app_methods/AddController.method.js'\r\nimport createAddService from './app_methods/AddService.method.js'\r\nimport createCreateModule from './app_methods/CreateModule.method.js'\r\nimport createRun from './app_methods/Run.method.js'\r\n\r\n/**\r\n * @typedef {Object} CORSOptions\r\n * @property {string | string[]} origins - Origins that are allowed (e.g. domains)\r\n * @property {string | string[]} methods - HTTP methods that are allowed\r\n * @property {string[]} headers - Allowed headers\r\n * @property {boolean} credentials - Allow cookies or not\r\n * @property {number} maxAge - Cache life time (in seconds)\r\n */\r\n\r\n/**\r\n * @param {Object} options \r\n * @param {number} [options.port = 3000]\r\n * @param {number} [options.infiniteLoopGuardTreshold = 10]\r\n * @returns {{\r\n *      CORS: (options: {\r\n *          origins: string | string[],\r\n *          methods: string | string[],\r\n *          headers: string[],\r\n *          credentials: boolean,\r\n *          maxAge: number\r\n *      }) => void\r\n *      AddController: (data: object) => void\r\n *      AddService: (data: object) => void\r\n *      CreateModule: (data: object) => void\r\n *      Run: (callback?: (port?: number) => void) => void\r\n * }}\r\n */\r\n\r\nconst App = (options = {}) => {\r\n\r\n    const config = { ...appConfig, ...options }\r\n\r\n    const appCtx = createAppContext()\r\n\r\n    appCtx.attachConfig(config)\r\n\r\n    const server = createServer((req, res) => httpHandler(req, res, appCtx))\r\n\r\n    return {\r\n        CORS: createCORS(appCtx),\r\n        AddController: createAddController(appCtx),\r\n        AddService: createAddService(appCtx),\r\n        CreateModule: createCreateModule(appCtx),\r\n        Run: createRun(server, config)\r\n    }\r\n\r\n}\r\n\r\nexport default App"],"names":["appConfig","createAppContext","createServer","createCORS","createAddController","createAddService","createCreateModule","createRun"],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,MAAC,GAAG,GAAG,CAAC,OAAO,GAAG,EAAE,KAAK;AAC9B;AACA,IAAI,MAAM,MAAM,GAAG,EAAE,GAAGA,UAAS,EAAE,GAAG,OAAO,GAAE;AAC/C;AACA,IAAI,MAAM,MAAM,GAAGC,WAAgB,GAAE;AACrC;AACA,IAAI,MAAM,CAAC,YAAY,CAAC,MAAM,EAAC;AAC/B;AACA,IAAI,MAAM,MAAM,GAAGC,iBAAY,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,EAAC;AAC5E;AACA,IAAI,OAAO;AACX,QAAQ,IAAI,EAAEC,WAAU,CAAC,MAAM,CAAC;AAChC,QAAQ,aAAa,EAAEC,oBAAmB,CAAC,MAAM,CAAC;AAClD,QAAQ,UAAU,EAAEC,iBAAgB,CAAC,MAAM,CAAC;AAC5C,QAAQ,YAAY,EAAEC,mBAAkB,CAAC,MAAM,CAAC;AAChD,QAAQ,GAAG,EAAEC,UAAS,CAAC,MAAM,EAAE,MAAM,CAAC;AACtC,KAAK;AACL;AACA;;;;"}